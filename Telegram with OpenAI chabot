#Create a chatbot with the OpenAI API

#importing Telegram libraries
import logging
from telegram import ForceReply, Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters

from telegram import Bot
import asyncio

OPENAI_TOKEN =TOKEN


# Enable logging
logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO )

# set higher logging level for httpx to avoid all GET and POST requests being logged
logging.getLogger("httpx").setLevel(logging.WARNING)

logger = logging.getLogger(__name__)

#importing OpenAi libraries
from openai import OpenAI

client = OpenAI(api_key=OPENAI_TOKEN)


#---------------------program--------------------------------------------------------------

async def respuesta(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    ''' The function receives a message from the user via Telegram, the API responds and the response is displayed again in the Telegram chat'''

    message = update.message.text.lower()  #message from the user

    messages=[{"role": "system",
        "content": "Answer like a Friend"},

              {"role":  "assistant",
        "content":"Hola, Â¿como estas?"},

              {"role": "user",
        "content": menssage}

              ]

    response = client.chat.completions.create(model="gpt-3.5-turbo", messages=messages, max_tokens=50, temperature=0 )

    answer = response.choices[0].message.content

    await update.message.reply_text(answer)   "the answer is displayed



def main() -> None:

    # Create the Application and pass it your bot's token.
    application = Application.builder().token("TELEGRAM_TOKEN").build()


    # on non command i.e message - respuesta the message on Telegram
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, respuesta))

    # Run the bot until the user presses Ctrl-C
    application.run_polling(allowed_updates=Update.ALL_TYPES)


if __name__ == "__main__":
    main()
